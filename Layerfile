FROM vm/ubuntu:18.04
SECRET ENV TUNNEL_TOKEN_VALUE
RUN echo "secret is: $TUNNEL_TOKEN_VALUE"
# install docker-ce (from tutorial for ubuntu)
RUN apt-get update && \
  apt-get install ca-certificates curl gnupg lsb-release && \
  sudo mkdir -p /etc/apt/keyrings && \
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg && \
  echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" |\
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
  apt-get update && \
  apt-get install docker-ce docker-ce-cli containerd.io

# install docker compose
# RUN curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
#     chmod +x /usr/local/bin/docker-compose
# install & start k3s
RUN curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.21.2+k3s1 sh -s - --docker
# copy the root (i.e., repository root) to /root in the runner
COPY . /root/v2ray-tor-proxy
WORKDIR /root/v2ray-tor-proxy
RUN systemctl restart k3s
RUN kubectl create configmap xray-config --from-file=config.json=/root/v2ray-tor-proxy/config.json
RUN kubectl create configmap tor-config --from-file=torrc=/root/v2ray-tor-proxy/tor/torrc
RUN kubectl create configmap nginx-config --from-file=nginx.conf=/root/v2ray-tor-proxy/nginx/nginx.conf
RUN kubectl create secret generic cf-tunnel-token --from-literal=TUNNEL_TOKEN_VALUE=$TUNNEL_TOKEN_VALUE
RUN k3s kubectl apply -f deploy.yaml
# Run portainer (optional)
RUN k3s kubectl apply -n portainer -f https://raw.githubusercontent.com/portainer/k8s/master/deploy/manifests/portainer/portainer.yaml
RUN k3s kubectl apply -f https://downloads.portainer.io/ce2-16/portainer-agent-k8s-lb.yaml
# TODO: log in to docker hub
# See https://webapp.io/docs/advanced-workflows#logging-in-to-docker to learn how to log in to docker
# RUN docker swarm init
# RUN REPEATABLE docker compose build --parallel
# RUN docker compose up -d
# RUN docker stack deploy -c docker-swarm.yml my-swarm-stack
# TODO: change port to whatever is configured in your docker-compose.yml
EXPOSE WEBSITE localhost:12345
